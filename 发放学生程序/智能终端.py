from microbit import *import dht11import musiclength=10pin14.write_digital(0)   # pin14口置高电平，LED灯亮#*****************************WIFI模块内部代码***************************************************class Obloq(object):    def connectWifi(self,SSID,PASSWORD,TIME):        uart.write('AT+CWJAP="%s","%s"\r\n' %(SSID, PASSWORD))      # 设置wifi模块连接无线网络        display.scroll("wait...");display.show(Image.HAPPY)        uart.write('AT+CIPMUX=0\r\n');sleep(500)                   # 设置WIFI模块单路链接模式        uart.write('AT+CIPSTART="TCP","0",0\r\n');sleep(TIME)           if uart.any():                                              #第二次读，返回服务器IP设置消息            data = str(uart.readall(), "UTF-8");sleep(1000)            uart.write('AT+CIFSR\r\n');sleep(2000);data=0               # 设置这个后 读串口返回绑定ip         if uart.any():            data = str(uart.readall(), "UTF-8")            temp = data.split("\"",5)            self.ip_address = temp[1]            if self.ip_address[0]=='1' and len(self.ip_address)>10:                 return True            else:                display.show(".");sleep(3000)                return False             else:            display.show(".");sleep(3000)            return False                            def ifconfig(self):        return self.ip_address                   def httpSet(self,IP,PORT):        uart.write('AT+CIPSTART="TCP","%s",%s\r\n' %(IP, PORT))          sleep(5000)        display.scroll("S_ok")        uart.write('AT+CIPMODE=1\r\n')  # 设置WIFI模块为透穿模式        sleep(500)        uart.write('AT+CIPSEND\r\n')  # 在透穿模式下开始发送数据        sleep(3000)        if uart.any():  # 如果串口有值            self.res = str(uart.readall(), "UTF-8")            self.res = 0          def get(self,url,time):        uart.write('GET /'+ url + '\r\n\r\n')          sleep(1000)        if uart.any():  # 如果串口有值            res = str(uart.readall(), "UTF-8")              return (200,res)        return (404,"NOT FOUND")  Obloq = Obloq()#***********************************************************************************************IP="192.168.31.123"    #Web服务器的地址PORT="8080"            #Web服务器的端口SSID="508"             #Wi-Fi的SSIDPASSWORD="508508508"   #Wi-Fi的密码uart.init(baudrate=115200, bits=8, parity=None, stop=1, tx=pin12, rx=pin8)  while Obloq.connectWifi(SSID,PASSWORD,10000) != True:    display.show(".")display.scroll(Obloq.ifconfig())Obloq.httpSet(IP,PORT)while True:    temp,hum=dht11.read(1)      # 获取1号口温湿度数据    light =pin2.read_analog()   # 获取2号口光线数据    #print(temp)       erron,resp = Obloq.get('input?name=Gabriel&tempval=' + str(temp) + '&humval=' + str(hum)+'&lightval=' + str(light), 10000)     if erron == 200:        display.scroll(resp)        #根据返回值（resp）的情况，判断是否要开启 蜂鸣器 或者 LED灯        # 情况1.如果返回“T_L_bad”，执行蜂鸣器响，LED灯亮        # 情况2.如果返回“T_bad”，执行蜂鸣器响        # 情况3.如果返回“L_bad”，执行LED灯亮        # 情况4.如果返回“ok”,LED灯熄灭        if resp=='T_L_bad':          #执行蜂鸣器响，LED灯亮          pin14.write_digital(1)   # pin14口置高电平          length=10          for freq in range(880,1760,16):              music.pitch(freq,length)# freq为蜂鸣器频率，length为次数        elif resp=='T_bad':          #执行蜂鸣器响          length=10          for freq in range(880,1760,16):              music.pitch(freq,length)# freq为蜂鸣器频率，length为次数        elif resp=='L_bad' :          #执行LED灯亮          pin14.write_digital(1)   # pin14口置高电平，LED灯亮          sleep(1000)        else:   #返回“ok”          pin14.write_digital(0)   # pin14口置高电平，LED灯熄灭        else:        display.scroll(str(erron))    sleep(1000*5)